export a = b ==> then check env and export
export a
export a=
export b=c
export e=$b   ***
export z=\v ==> it gives z="v" ***
export _=sakdjh ==> u shouldn't have change this var u have to protect the var _
unset PATH
export PATH=/bin:/usr/bin ==> should work
=========================
env
=========================
cd -
cd ..
cd .
cd
cd ~
cd ~//////////////////////////////////
cd ~//////////////////////////////////Path
cd /
cd //
=========================
echo -n 
echo -n -n -n -n
echo -nnnnnnn
echo $?
echo hello$?hi
echo hello$PWD
echo $PWD
echo "$"PWD
echo "$PWD"
echo '$PWD'
echo '$'PWD
echo " "$PWD" "
echo '" '$PWD' "
echo \$\$\$\$
echo \anychar\anychar\anychar
echo \'\'\'\'
echo \"\"\"
echo \\"$PWD
=========================
\\
/
//
./ls
\ls           --------------------------------------------------------------------
=========================
'/bin/ls'
'anycmd' ==> should work
'/bin/ls ; /bin/pwd' ==> shouldn't work
any test contains double quetes or signle quetes
=========================
when running minishell multiple times a var called SHLVL in the env must be added to 1 
=========================
exit ==> echo $? == 0
exit 1 ==> echo $? == 1
exit 9 ==> echo $? == 9
exit 255 ==> echo $? == 255
exit 256 ==> echo $? == 0
exit MAX_LONG_INT ==> echo $? == 255
exit MAX_LONG_INT + 1 ==> print Error msg eceho $? == 255
exit MIN_LONG_INT ==> echo $? == 1
exit g h and try exit 8 9
=========================
signals:
try ctrl-C ctrl-\ ctrl-D in an empty prompt then check echo $?
try ctrl-C ctrl-\ ctrl-D after u wrote some stuff then check echo $?
try ctrl-C ctrl-\ ctrl-D after u run a blocking cmd like cat or wc or sleep 5 then check echo $?
=========================
beware of blocking cmd and return status...
when run ./minishell the var OLDPWD must be Deleted from the env and then to be set after running cd + path






export hi=salam
echo hello world > $hi +> it works, creates file named salam
export hi=
echo hello world > $hi   => bash: $hi: ambiguous redirect




export ksf=_


  echo hi > f1 < f2>>          f3 > f4 |         cat             -e o1      < o2> o3 lll | open -s < t1 ppp 




ls -la | cat -e | grep l | cat -e | echo fuck > tmp/file | cat < tmp/file | rm tmp/file1 ; ls -la | cat -e | grep a ; cd .. ; env | grep PWD ; cd minishell ; echo $PWD $OLDPWD ; echo "$USER"'$USER'"\"hi\$USER" ; export hi=newFile ; echo wtf >> tmp/$hi;


cd tmp ; echo > l ; echo hi | echo hi > f1 >f2 <f3 <f4 <f5 > f6 | ls-la | echo f10;






c
ifconfig | grep "192.168" > tmp/file ; cat tmp/file;echo $?
echo text > tmp/file text2 > tmp/file1 ; cat tmp/file tmp/file1;echo $?
echo text > tmp/file ; cat tmp/file;echo $?
echo text > tmp/file ; cat tmp/file;echo $?
echo text > tmp/file ; echo text 1>tmp/tmp ; cat tmp/file tmp/tmp;echo $?
echo text > $PWD/tmp/file text2 ; cat $PWD/tmp/file;echo $?
echo text$USER > tmp/file $USER ; cat tmp/file ;echo $?
echo "text"$USER > tmp/file ; cat tmp/file ;echo $?
echo $USER"text""'$USER'""$USER" > tmp/file >> tmp/file2 $USER ; cat tmp/file tmp/file2;echo $? 
echo '$USER'"123$USER123""text" > tmp/file ; cat tmp/file ;echo $?
echo "text" > tmp/file >> tmp/file1 ; cat tmp/file tmp/file1 ;echo $?
echo "text" > tmp/file text2> tmp/file1; cat tmp/file tmp/file1;echo $?
echo "text" > tmp/file text2 ; cat tmp/file ;echo $?
echo "text" > tmp/file text ; cat tmp/file ;echo $?
echo "text" > tmp/file ; cat tmp/file;echo $?
echo "text" > tmp/file ; cat tmp/file ; rm -f tmp/file;echo $?
echo text$USER > tmp/file $USER ; cat tmp/file ; rm -f tmp/file;echo $?
echo "text"$USER > tmp/file ; cat tmp/file ; rm -f tmp/file;echo $?
echo $USER"text""'$USER'""$USER" > tmp/file >> tmp/file2 $USER ; cat tmp/file tmp/file2 ; rm -f tmp/file tmp/file2;echo $?
echo '$USER'"123$USER123""text" > tmp/file ; cat tmp/file ; rm -f tmp/file;echo $?
echo "text" > tmp/file >> tmp/file1 ; cat tmp/file tmp/file1 ; rm -f tmp/file tmp/file1;echo $?
echo "text" > tmp/file text2> tmp/file1; cat tmp/file tmp/file1; rm -f tmp/file tmp/file1;echo $?
echo $USER  $USER7777"text"$USER $USER9999 > tmp/file $USER $USER9999 ; cat tmp/file ; rm -f tmp/file;echo $?
echo $USER  $USER7777"text"$USER $USER9999 > tmp/file $USER $USER9999 ; cat tmp/file;echo $?
echo something > > tmp/file ; cat < tmp/file;echo $?
echo something > tmp/file ; cat tmp/file;echo $?
echo something > tmp/file ; >> tmp/file ls -la ; cat tmp/file;echo $?
echo something > tmp/file ; cd doesntexist 2>/dev/null ; cat tmp/file;echo $?
cd doesntexist 2>/dev/null;echo $?
cat doesntexist 2>/dev/null;echo $?
cat doesntexist test.sh 2>tmp/errors 1>tmp/file ; cat tmp/errors tmp/file;echo $?
cat doesntexist 2 > tmp/errors 1>tmp/file ; cat tmp/errors tmp/file;echo $?
cat doesntexist 2> tmp/errors 1>tmp/file ; cat tmp/errors tmp/file;echo $?
cat doesntexist 2>/errors 1>tmp/file ; cat /errors tmp/file ; rm -f /errors;echo $?
cat doesntexist 2>tmp/errors 1>tmp/file 2>tmp/errors2 ; cat tmp/errors tmp/file tmp/errors2;echo $?
cat doesntexist 2>tmp/errors 1>tmp/file 2>/dev/null ; cat tmp/errors tmp/file;echo $?
cat doesntexist 2>tmp/errors 2>>tmp/errors ; cat tmp/errors tmp/file;echo $?
cat doesntexist 2>tmp/errors 2 >> tmp/errors ; cat tmp/errors tmp/file;echo $?
cat doesntexist 2>tmp/errors 1>tmp/file 2>>tmp/file ; cat tmp/errors tmp/file;echo $?
cat doesntexist 2>tmp/errors 1>tmp/file 2>tmp/file 2>>tmp/file 2>>tmp/errors ; cat tmp/errors tmp/file;echo $?
cat test.sh 1>/dev/null;echo $?
rm -f doesntexist 2>/dev/null;echo $?
> tmp/file echo something ; cat tmp/file;echo $?
> tmp/file cat test.sh;echo $?
> tmp/file echo "something" "something2" ; > tmp/file cd wtf 2>/dev/null ; cat tmp/file;echo $?
> tmp/file cd wtf ; cat tmp/file;echo $?
>> tmp/file cd wtf 2>/dev/null ; cat tmp/file;echo $?
> tmp/file cd wtf 2>/dev/null ; cat tmp/file;echo $?
cat < README.md;echo $?
cat < README.md test.sh;echo $?
cat < README.md | wc -l | xargs;echo $?
cat < README.md > tmp/file ; cat tmp/file | wc -l | xargs > tmp/file1 ; cat tmp/file1;echo $?
cat < README.md doesntexist 2>/dev/null > tmp/file ; cat tmp/file;echo $?


echo $?

;; test

| test



echo > <
echo | |
<
;
|
| | |
;;;;;;;
hello world
||||||||
            
cat wouaf wouaf
>
>>>>>>>>
<<<<<<<<<
> > > >
>> >> >> >>
~
<<
/Users
 
.
..
/
\\\
EechoE
.echo.
>echo>
<echo<
>>echo>>
;echo;
|echo|
echo -n |
echo -n ;
echo ;
echo something ;
rm -f something
cat something
| echo -n oui
; echo -n oui
trying to destroy your minishell ; echo hello
trying something again echo if you see this message thats not a good new
qewew
wtf
hi im thallard
nice to meet you if these tests are green
your minishell is perfect